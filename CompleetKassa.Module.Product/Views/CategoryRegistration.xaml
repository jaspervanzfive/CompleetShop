<UserControl x:Class="CompleetKassa.Module.ProductManagement.Views.CategoryRegistration"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CompleetKassa.Module.ProductManagement.Views"
             mc:Ignorable="d" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:c="clr-namespace:CompleetKassa.Converters;assembly=CompleetKassa.Converters"
             d:DesignHeight="400" d:DesignWidth="300">
    <UserControl.Resources>
        <c:RelativeToAbsolutePathConverter x:Key="RelativeToAbsolutePathConverter"/>

        <CollectionViewSource x:Key="MainCategories" Source="{Binding MainCategoryListView}"/>

        <Style x:Key="Label" TargetType="{x:Type Label}" BasedOn="{x:Null}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Height" Value="23"/>
        </Style>
        <Style x:Key="UserTextBox" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Right" 
                                       Foreground="Red" 
                                       Margin="5,0,5,0"
                                       Text="*"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Background" Value="Pink"/>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>

                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NavButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
            <Setter Property="Margin" Value="1,1,1,1"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="40"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Selected Category -->
        <Grid Grid.Row="0" HorizontalAlignment="Left" Margin="5" VerticalAlignment="Top" Background="AntiqueWhite">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="250"/>
                <ColumnDefinition Width="Auto" MinWidth="50"/>
                <ColumnDefinition Width="Auto" MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding NewCategoryFormVisibility}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Label Content="Category ID:" Grid.Row="0" Style="{StaticResource Label}"/>
            <TextBox Grid.Row="0" IsReadOnly="True" Style="{StaticResource UserTextBox}"
                  Text="{Binding HoldCategoryID, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>

            <Label Content="Name:" Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox Grid.Row="1" IsReadOnly="{Binding ReadOnlyNewCategoryForm}" Style="{StaticResource UserTextBox}"
                  Text="{Binding HoldCategoryName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>

            <Label Content="Detail:" Grid.Row="2" Style="{StaticResource Label}"/>
            <TextBox Grid.Row="2" IsReadOnly="{Binding ReadOnlyNewCategoryForm}" Style="{StaticResource UserTextBox}"
                            Text="{Binding HoldCategoryDetail, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>

            <Label Content="Color:" Grid.Row="3" Style="{StaticResource Label}"/>
            <TextBox Grid.Row="3" IsReadOnly="{Binding ReadOnlyNewCategoryForm}" Style="{StaticResource UserTextBox}"
                            Text="{Binding HoldCategoryColor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>

            <Label Content="Status:" Grid.Row="4" Style="{StaticResource Label}"/>
            <ComboBox Grid.Row="4" IsReadOnly="{Binding ReadOnlyNewCategoryForm}" Width="150" Margin="3" HorizontalAlignment="Right" IsEditable="True" SelectedValuePath="Tag" SelectedValue="{Binding HoldCategoryStatus, Mode=TwoWay}">
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ReadOnlyNewCategoryForm}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBoxItem Content="Disabled" Tag="0"/>
                <ComboBoxItem Content="Enabled" Tag="1"/>
            </ComboBox>

            <Label Content="Parent:" Grid.Row="5" Style="{StaticResource Label}"/>
            <ComboBox Grid.Row="5"
                                  IsReadOnly="{Binding ReadOnlyNewCategoryForm}"
                                  IsEditable="True"
                                  Margin="3"
                                  HorizontalAlignment="Right"
                                  Width="150"
                                  ItemsSource="{Binding MainCategoryListView}"
                                  SelectedValue="{Binding HoldCategoryParent, Mode=TwoWay}"
                                  SelectedValuePath="ID" 
                                  DisplayMemberPath="Name"
                                >
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ReadOnlyNewCategoryForm}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
        </Grid>

        <!-- List Category from DB -->
        <DataGrid Grid.Row="1" x:Name="CategoriesDataGrid" SelectionUnit="FullRow" SelectionMode="Single"  AutoGenerateColumns="False" CanUserAddRows="false" IsReadOnly="True" IsEnabled="{Binding EnableCategoryList}" EnableRowVirtualization="True" Width="auto" ItemsSource="{Binding CategoryListView}" SelectedValue="{Binding SelectedCategory}" Margin="10,10,10,10"  RowDetailsVisibilityMode="Visible" IsSynchronizedWithCurrentItem="True" >
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Delete" Command="{Binding Path=DataContext.OnDeleteCategoryCommand, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding ID}" IsReadOnly="True" Header="ID" Width="SizeToHeader"/>
                <DataGridTextColumn Binding="{Binding Name}" Header="Name" Width="SizeToHeader"/>
                <DataGridTextColumn Binding="{Binding Detail}" Header="Detail" Width="SizeToHeader"/>
                <DataGridTextColumn Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                <DataGridTextColumn Header="Status" Width="SizeToHeader">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="0">
                                    <Setter Property="TextBlock.Text" Value="Disabled"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="1">
                                    <Setter Property="TextBlock.Text" Value="Enabled"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding ParentName}" Header="Parent" Width="SizeToHeader"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- New Category -->
        <Grid Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5" Background="SeaGreen">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="250"/>
                <ColumnDefinition Width="Auto" MinWidth="50"/>
                <ColumnDefinition Width="Auto" MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.NewCategoryFormVisibility}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <TextBlock Text="New Category Form" Grid.Row="0" />
            <Label Content="Name:" Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox Grid.Row="1" Style="{StaticResource UserTextBox}"
                  Text="{Binding HoldCategoryName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

            <Label Content="Detail:" Grid.Row="2" Style="{StaticResource Label}"/>
            <TextBox Grid.Row="2" Style="{StaticResource UserTextBox}"
                  Text="{Binding HoldCategoryDetail, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"/>

            <Label Content="Color:" Grid.Row="3" Style="{StaticResource Label}"/>
            <TextBox Grid.Row="3" Style="{StaticResource UserTextBox}"
                  Text="{Binding HoldCategoryColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"/>

            <Label Content="Status:" Grid.Row="4" Style="{StaticResource Label}"/>
            <ComboBox 
                            Grid.Row="4" 
                            Width="150"
                            Margin="3"
                            HorizontalAlignment="Right"
                            IsEditable="True"
                            SelectedValuePath="Tag"
                            SelectedValue="{Binding HoldCategoryStatus, Mode=TwoWay}"
                            >
                <ComboBoxItem Content="Disabled" Tag="0"/>
                <ComboBoxItem Content="Enabled" Tag="1"/>
            </ComboBox>

            <Label Content="Parent:" Grid.Row="5" Style="{StaticResource Label}"/>
            <ComboBox
                            Grid.Row="5"
                            IsEditable="True"
                            Margin="3"
                            HorizontalAlignment="Right"
                            Width="150"
                            ItemsSource="{Binding MainCategoryListView}"
                            SelectedValue="{Binding HoldCategoryParent, Mode=TwoWay}"
                            SelectedValuePath="ID" 
                            DisplayMemberPath="Name"
                               />
        </Grid>
    </Grid>

</UserControl>
